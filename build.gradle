buildscript {
    

    repositories {
        mavenLocal()
        mavenCentral()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        google()
    }
    dependencies {

    }
}

plugins {
    id 'java-library'
    id 'jacoco'
    id 'checkstyle'
}



allprojects {
    apply plugin: "eclipse"
    apply plugin: "jacoco"

    version = '1.0'
    ext {
        appName = "Piazza Panic"
        gdxVersion = '1.11.0'
        roboVMVersion = '2.3.16'
        box2DLightsVersion = '1.5'
        ashleyVersion = '1.7.4'
        aiVersion = '1.8.2'
        gdxControllersVersion = '2.2.1'
    }

    repositories {
        mavenLocal()
        mavenCentral()
        google()
        gradlePluginPortal()
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://oss.sonatype.org/content/repositories/releases/" }
        maven { url "https://jitpack.io" }
    }
}

project(":desktop") {
    apply plugin: "java-library"
    apply plugin: "jacoco"

    dependencies {
        implementation project(":core")
        api "com.badlogicgames.gdx:gdx-backend-lwjgl3:$gdxVersion"
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        
    }
}

project(":core") {
    apply plugin: "java-library"
    apply plugin: "jacoco"
    apply plugin: "checkstyle"

    def checkstyleVersion = '10.4'

    configurations {
        checkstyleRules
    }

    dependencies {
        api "com.badlogicgames.gdx:gdx:$gdxVersion"
        implementation 'org.javatuples:javatuples:1.2'
        api "com.badlogicgames.gdx:gdx-platform:$gdxVersion:natives-desktop"
        testImplementation(platform('org.junit:junit-bom:5.9.2'))
        testImplementation('org.junit.vintage:junit-vintage-engine:5.9.2')
        testImplementation('org.junit.jupiter:junit-jupiter')
        //testImplementation('junit:junit:4.13')
        testImplementation('org.mockito:mockito-core:5.2.0')
        testImplementation("com.badlogicgames.gdx:gdx-backend-headless:$gdxVersion")
        checkstyleRules("com.puppycrawl.tools:checkstyle:${checkstyleVersion}") {
            transitive = false
        }
    }

    test {
        project.ext.assetsDir = new File("../assets")
        workingDir = project.assetsDir
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
    jacocoTestReport {
        reports {
            xml.required = false
            csv.required = false
            html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
        }
    }
    }
    checkstyle {
        toolVersion = '10.4'
        configFile = rootProject.resources.text.fromArchiveEntry(configurations.checkstyleRules, 'google_checks.xml').asFile()
        configProperties = [
                'checkstyle.cache.file': "${rootProject.buildDir}/checkstyle/cacheFile"
        ]
        showViolations = true
        //reportsDir = file("${rootProject.buildDir}/checkstyle/checkstyle.xml")
    }
}
